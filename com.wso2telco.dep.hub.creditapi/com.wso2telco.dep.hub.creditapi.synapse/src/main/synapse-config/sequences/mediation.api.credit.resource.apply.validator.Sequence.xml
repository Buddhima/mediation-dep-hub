<?xml version="1.0" encoding="UTF-8"?>
<sequence name="mediation.api.credit.resource.apply.validator.Sequence" onError="mediation.common.response.unexpectedError.Sequence" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <filter xpath="boolean($ctx:msisdn) and boolean($ctx:type) and boolean($ctx:amount) and boolean($ctx:referenceCode) and boolean($ctx:merchantIdentification)">
        <then>
            <call-template target="mediation.common.msisdnValidator.Template">
                <with-param name="paramName" value="msisdn"/>
                <with-param name="paramValue" value="{$ctx:msisdn}"/>
            </call-template>
            <call-template target="mediation.common.urlValidation.Template">
                <with-param name="paramName" value="notifyURL"/>
                <with-param name="paramValue" value="{$ctx:notifyURL}"/>
            </call-template>
            <switch source="$ctx:type">
                <case regex="^(money|data|minutes)$">
                    <call-template target="mediation.common.doubleValidation.Template">
                        <with-param name="paramName" value="amount"/>
                        <with-param name="paramValue" value="{$ctx:amount}"/>
                        <with-param name="validationType" value="GE_ZERO"/>
                    </call-template>
                </case>
                <case regex="^sms$">
                    <call-template target="mediation.common.integerValidation.Template">
                        <with-param name="paramName" value="amount"/>
                        <with-param name="paramValue" value="{$ctx:amount}"/>
                        <with-param name="validationType" value="GE_ZERO"/>
                    </call-template>
                </case>
                <default>
                    <sequence key="mediation.common.response.unexpectedError.Sequence"/>
                </default>
            </switch>
        </then>
        <else>
            <filter xpath="not(boolean($ctx:msisdn))">
                <then>
                    <property expression="fn:concat('msisdn',',')" name="missingParameters" scope="default" type="STRING"/>
                </then>
                <else/>
            </filter>
            <filter xpath="not(boolean($ctx:type))">
                <then>
                    <property expression="fn:concat($ctx:missingParameters, 'type,')" name="missingParameters" scope="default" type="STRING"/>
                </then>
                <else/>
            </filter>
            <filter xpath="not(boolean($ctx:amount))">
                <then>
                    <property expression="fn:concat($ctx:missingParameters, 'amount,')" name="missingParameters" scope="default" type="STRING"/>
                </then>
                <else/>
            </filter>
            <filter xpath="not(boolean($ctx:referenceCode))">
                <then>
                    <property expression="fn:concat($ctx:missingParameters, 'referenceCode,')" name="missingParameters" scope="default" type="STRING"/>
                </then>
                <else/>
            </filter>
            <filter xpath="not(boolean($ctx:merchantIdentification))">
                <then>
                    <property expression="fn:concat($ctx:missingParameters, 'merchantIdentification,')" name="missingParameters" scope="default" type="STRING"/>
                </then>
                <else/>
            </filter>
            <property expression="fn:substring($ctx:missingParameters, 0, fn:string-length($ctx:missingParameters))" name="missingParameters" scope="default" type="STRING"/>
            <log category="DEBUG" level="full">
                <property expression="$ctx:missingParameters" name="missingParameters"/>
            </log>
            <property name="httpStatusCode" scope="default" type="STRING" value="400"/>
            <property name="exceptionType" scope="default" type="STRING" value="SERVICE_EXCEPTION"/>
            <property name="messageId" scope="default" type="STRING" value="SVC0002"/>
            <property name="errorText" scope="default" type="STRING" value="Invalid input value for message part %1"/>
            <property expression="fn:concat('Missing mandatory parameters: ', $ctx:missingParameters)" name="errorVariable" scope="default" type="STRING"/>
            <sequence key="mediation.common.response.exceptions.Sequence"/>
        </else>
    </filter>
</sequence>
