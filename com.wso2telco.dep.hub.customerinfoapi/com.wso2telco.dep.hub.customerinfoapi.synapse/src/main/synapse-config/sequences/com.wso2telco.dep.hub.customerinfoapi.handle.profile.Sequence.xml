<?xml version="1.0" encoding="UTF-8"?>
<sequence
  name="com.wso2telco.dep.hub.customerinfoapi.handle.profile.Sequence"
  trace="disable" xmlns="http://ws.apache.org/ns/synapse">
  <sequence key="com.wso2telco.dep.common.main.request.Sequence"/>
  <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
  <property description="msisdn" expression="$ctx:query.param.msisdn"
    name="msisdn" scope="default" type="STRING"/>
  <property expression="fn:normalize-space($ctx:msisdn)" name="msisdn"
    scope="default" type="STRING"/>
  <property expression="get-property('msisdn')" name="MSISDN"
    scope="default" type="STRING"/>
  <property description="mcc" expression="$ctx:query.param.mcc"
    name="mcc" scope="default" type="STRING"/>
  <property expression="fn:normalize-space($ctx:mcc)" name="mcc"
    scope="default" type="STRING"/>
  <property description="mnc" expression="$ctx:query.param.mnc"
    name="mnc" scope="default" type="STRING"/>
  <property expression="fn:normalize-space($ctx:mnc)" name="mnc"
    scope="default" type="STRING"/>
  <property description="imsi" expression="$ctx:query.param.imsi"
    name="imsi" scope="default" type="STRING"/>
  <property expression="fn:normalize-space($ctx:imsi)" name="imsi"
    scope="default" type="STRING"/>
  <property description="onBehalfOf"
    expression="$ctx:query.param.onBehalfOf" name="onBehalfOf"
    scope="default" type="STRING"/>
  <property expression="fn:normalize-space($ctx:onBehalfOf)"
    name="onBehalfOf" scope="default" type="STRING"/>
  <property description="purchaseCategoryCode"
    expression="$ctx:query.param.purchaseCategoryCode"
    name="purchaseCategoryCode" scope="default" type="STRING"/>
  <property expression="fn:normalize-space($ctx:purchaseCategoryCode)"
    name="purchaseCategoryCode" scope="default" type="STRING"/>
  <property description="requestIdentifier"
    expression="$ctx:query.param.requestIdentifier"
    name="requestIdentifier" scope="default" type="STRING"/>
  <property expression="fn:normalize-space($ctx:requestIdentifier)"
    name="requestIdentifier" scope="default" type="STRING"/>
  <!-- validate mandatory parameters of the request -->
  <filter xpath="not(boolean($ctx:requestIdentifier))">
    <then>
      <property expression="fn:concat('requestIdentifier',',')"
        name="missingParameters" scope="default" type="STRING"/>
      <property name="MANDATORY_PARAMETER_VALIDATED" scope="default"
        type="STRING" value="false"/>
    </then>
    <else/>
  </filter>
  <!-- validate request identifier length -->
  <call-template target="com.wso2telco.dep.common.lengthValidator.Template">
    <with-param name="paramName" value="requestIdentifier"/>
    <with-param name="paramValue" value="{$ctx:requestIdentifier}"/>
    <with-param name="paramValidLength" value="6"/>
    <with-param name="paramValidationType" value="LT"/>
  </call-template>
  <filter xpath="boolean($ctx:mcc)">
    <then>
      <filter xpath="boolean($ctx:mnc)">
        <then/>
        <else>
          <property
            expression="fn:concat($ctx:missingParameters, 'mnc,')"
            name="missingParameters" scope="default" type="STRING"/>
          <property name="MANDATORY_PARAMETER_VALIDATED" scope="default"
            type="STRING" value="false"/>
        </else>
      </filter>
    </then>
    <else/>
  </filter>
  <filter xpath="boolean($ctx:msisdn)">
    <then/>
    <else>
      <filter xpath="boolean($ctx:imsi)">
        <then>
          <script language="js"><![CDATA[var imsi = mc.getProperty("imsi");
					var mcc = imsi.substring(0, 3);
					var rem = imsi.substring(3);
					var mnc = rem.substring(0, 2);
					mc.getProperty("mcc", mcc);
					mc.getProperty("mnc", mnc);]]></script>
        </then>
        <else>
          <property
            expression="fn:concat($ctx:missingParameters, 'msisdn or imsi,')"
            name="missingParameters" scope="default" type="STRING"/>
          <property name="MANDATORY_PARAMETER_VALIDATED" scope="default"
            type="STRING" value="false"/>
        </else>
      </filter>
    </else>
  </filter>
  <filter regex="false" source="get-property('MANDATORY_PARAMETER_VALIDATED')">
    <then>
      <property
        expression="fn:substring($ctx:missingParameters, 0, fn:string-length($ctx:missingParameters))"
        name="missingParameters" scope="default" type="STRING"/>
      <property name="httpStatusCode" scope="default" type="STRING" value="400"/>
      <property name="exceptionType" scope="default" type="STRING" value="SERVICE_EXCEPTION"/>
      <property name="messageId" scope="default" type="STRING" value="SVC0002"/>
      <property name="errorText" scope="default" type="STRING" value="Invalid input value for message part %1"/>
      <property
        expression="fn:concat('Missing mandatory parameters: ', $ctx:missingParameters)"
        name="errorVariable" scope="default" type="STRING"/>
      <sequence key="com.wso2telco.dep.common.response.exceptions.Sequence"/>
    </then>
    <else/>
  </filter>
  <!-- validate msisdn format -->
  <call-template target="com.wso2telco.dep.common.msisdnValidator.Template">
    <with-param name="paramName" value="msisdn"/>
    <with-param name="paramValue" value="{$ctx:msisdn}"/>
  </call-template>
  <!-- validate purchase category code in request -->
  <sequence key="com.wso2telco.dep.common.purchase.category.code.validate.Sequence"/>
  <filter regex="false" source="get-property('PURCHASE_CATEGORY_VALIDATED')">
    <then>
      <sequence key="com.wso2telco.dep.common.response.exceptions.Sequence"/>
    </then>
    <else/>
  </filter>
  <filter regex="true" source="get-property('INTERNAL_ERROR')">
    <then>
      <sequence key="com.wso2telco.dep.common.response.exceptions.Sequence"/>
    </then>
    <else/>
  </filter>
  <!-- retrieve hub url from registry -->
  <property
    expression="get-property('registry', 'conf:/repository/wso2telco/configurations/mediationConfig.xml')"
    name="mediationConfig" scope="default" type="OM"/>
  <property expression="$ctx:mediationConfig//huburl" name="HUB_URL"
    scope="default" type="STRING"/>
  <!-- retrieve operator's endpoint -->
  <sequence key="com.wso2telco.dep.common.endpoint.retriever.Sequence"/>
  <!-- retrieve operator's access token -->
  <sequence key="com.wso2telco.dep.common.select.token.Sequence"/>
  <!-- send request to operator endpoint -->
  <sequence key="com.wso2telco.dep.common.call.endpoint.Sequence"/>
  <!-- generating response json -->
  <script language="js"><![CDATA[var operatorEndpoint = mc.getProperty("OPERATOR_ENDPOINT");
	var hubURL = mc.getProperty("HUB_URL");
	var apiName = mc.getProperty("API_NAME");
	var apiVersion = mc.getProperty("VERSION");
	var payload = mc.getPayloadJSON();
	payload.customer.requestIdentifier = mc.getProperty("requestIdentifier");
	var gatewayResourceURL = payload.customer.resourceURL;
	var resourcePath = gatewayResourceURL.replace(operatorEndpoint, "");
	var hubResourceURL = hubURL.concat("/").concat(apiName).concat("/").concat(apiVersion).concat(resourcePath);
	payload.customer.resourceURL = hubResourceURL;
	mc.setPayloadJSON(payload);]]></script>
  <respond/>
</sequence>
