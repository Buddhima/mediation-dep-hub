<?xml version="1.0" encoding="UTF-8"?>
<sequence name="com.wso2telco.dep.hub.walletapi.handle.payment.Sequence"
  trace="disable" xmlns="http://ws.apache.org/ns/synapse">
  <sequence key="mediation.common.main.request.Sequence"/>
  <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
  <property expression="json-eval($.makePayment.clientCorrelator)"
    name="clientCorrelator" scope="default" type="STRING"/>
  <property expression="json-eval($.makePayment.endUserId)"
    name="endUserId" scope="default" type="STRING"/>
  <property expression="get-property('endUserId')" name="MSISDN"
    scope="default" type="STRING"/>
  <property expression="json-eval($.makePayment.referenceCode)"
    name="referenceCode" scope="default" type="STRING"/>
  <property expression="json-eval($.makePayment.notifyURL)"
    name="notifyURL" scope="default" type="STRING"/>
  <property
    expression="json-eval($.makePayment.paymentAmount.chargingInformation.amount)"
    name="amount" scope="default" type="STRING"/>
  <property
    expression="json-eval($.makePayment.paymentAmount.chargingInformation.currency)"
    name="currency" scope="default" type="STRING"/>
  <property
    expression="json-eval($.makePayment.paymentAmount.chargingInformation.description)"
    name="description" scope="default" type="STRING"/>
  <property
    expression="json-eval($.makePayment.paymentAmount.chargingMetaData.onBehalfOf)"
    name="onBehalfOf" scope="default" type="STRING"/>
  <property
    expression="json-eval($.makePayment.paymentAmount.chargingMetaData.purchaseCategoryCode)"
    name="purchaseCategoryCode" scope="default" type="STRING"/>
  <property
    expression="json-eval($.makePayment.paymentAmount.chargingMetaData.channel)"
    name="channel" scope="default" type="STRING"/>
  <property
    expression="fn:concat('/transaction/', get-property('endUserId'),'/payment')"
    name="RESOURCE_PATH" scope="default" type="STRING"/>
  <filter xpath="boolean($ctx:endUserId) and boolean($ctx:referenceCode) and boolean($ctx:description) and boolean($ctx:currency) and boolean($ctx:amount)">
    <then>
      <call-template target="mediation.common.urlValidation.Template">
        <with-param name="paramName" value="notifyURL"/>
        <with-param name="paramValue" value="{$ctx:notifyURL}"/>
      </call-template>
      <call-template target="mediation.common.doubleValidation.Template">
        <with-param name="paramName" value="amount"/>
        <with-param name="paramValue" value="{$ctx:amount}"/>
        <with-param name="validationType" value="GE_ZERO"/>
      </call-template>
      <call-template target="mediation.common.msisdnValidator.Template">
        <with-param name="paramName" value="endUserId"/>
        <with-param name="paramValue" value="{$ctx:endUserId}"/>
      </call-template>
    </then>
    <else>
      <filter xpath="not(boolean($ctx:endUserId))">
        <then>
          <property expression="fn:concat('endUserId',',')"
            name="missingParameters" scope="default" type="STRING"/>
        </then>
        <else/>
      </filter>
      <filter xpath="not(boolean($ctx:referenceCode))">
        <then>
          <property
            expression="fn:concat($ctx:missingParameters, 'referenceCode,')"
            name="missingParameters" scope="default" type="STRING"/>
        </then>
        <else/>
      </filter>
      <filter xpath="not(boolean($ctx:description))">
        <then>
          <property
            expression="fn:concat($ctx:missingParameters, 'description,')"
            name="missingParameters" scope="default" type="STRING"/>
        </then>
        <else/>
      </filter>
      <filter xpath="not(boolean($ctx:currency))">
        <then>
          <property
            expression="fn:concat($ctx:missingParameters, 'currency,')"
            name="missingParameters" scope="default" type="STRING"/>
        </then>
        <else/>
      </filter>
      <filter xpath="not(boolean($ctx:amount))">
        <then>
          <property
            expression="fn:concat($ctx:missingParameters, 'amount,')"
            name="missingParameters" scope="default" type="STRING"/>
        </then>
        <else/>
      </filter>
      <property
        expression="fn:substring($ctx:missingParameters, 0, fn:string-length($ctx:missingParameters))"
        name="missingParameters" scope="default" type="STRING"/>
      <property name="httpStatusCode" scope="default" type="STRING" value="400"/>
      <property name="exceptionType" scope="default" type="STRING" value="SERVICE_EXCEPTION"/>
      <property name="messageId" scope="default" type="STRING" value="SVC0002"/>
      <property name="errorText" scope="default" type="STRING" value="Invalid input value for message part %1"/>
      <property
        expression="fn:concat('Missing mandatory parameters: ', $ctx:missingParameters)"
        name="errorVariable" scope="default" type="STRING"/>
      <sequence key="mediation.common.response.exceptions.Sequence"/>
    </else>
  </filter>
  <property
    expression="get-property('registry', 'conf:/repository/wso2telco/configurations/notificationURL.xml')"
    name="notificationURLConfig" scope="default" type="OM"/>
  <property expression="$ctx:notificationURLConfig//wallet"
    name="NOTIFICATION_URL" scope="default" type="STRING"/>
  <sequence key="mediation.common.notificationURLModify.Sequence"/>
  <filter regex="true" source="get-property('INTERNAL_ERROR')">
    <then>
      <sequence key="mediation.common.response.exceptions.Sequence"/>
    </then>
    <else/>
  </filter>
  <sequence key="mediation.common.purchaseCategoryCodeValidate.Sequence"/>
  <filter regex="false" source="get-property('PURCHASE_CATEGORY_VALIDATED')">
    <then>
      <sequence key="mediation.common.response.exceptions.Sequence"/>
    </then>
    <else/>
  </filter>
  <filter regex="true" source="get-property('INTERNAL_ERROR')">
    <then>
      <sequence key="mediation.common.response.exceptions.Sequence"/>
    </then>
    <else/>
  </filter>
  <sequence key="mediation.common.endpoint.retriever.Sequence"/>
  <sequence key="mediation.common.select.token.Sequence"/>
  <payloadFactory media-type="json">
    <format>

			{
				"makePayment" : {
					"clientCorrelator" "$1",
					"endUserId" : "$2",
					"paymentAmount" : {
						"chargingInformation" : {
							"amount" : "$3",
							"currency" : "$4",
							"description" : "$5"
						},
						"chargingMetaData" : {
							"onBehalfOf" : "$6",
							"purchaseCategoryCode" : "$7",
							"channel" : "$8"
						}
					},
					"referenceCode" : "$9",
					"notifyURL" : "$10"
				}
			}			
		</format>
    <args>
      <arg evaluator="xml" expression="get-property('clientCorrelator')" xmlns:ns="http://org.apache.synapse/xsd"/>
      <arg evaluator="xml" expression="get-property('endUserId')" xmlns:ns="http://org.apache.synapse/xsd"/>
      <arg evaluator="xml" expression="get-property('amount')" xmlns:ns="http://org.apache.synapse/xsd"/>
      <arg evaluator="xml" expression="get-property('currency')" xmlns:ns="http://org.apache.synapse/xsd"/>
      <arg evaluator="xml" expression="get-property('description')" xmlns:ns="http://org.apache.synapse/xsd"/>
      <arg evaluator="xml" expression="get-property('onBehalfOf')" xmlns:ns="http://org.apache.synapse/xsd"/>
      <arg evaluator="xml"
        expression="get-property('purchaseCategoryCode')" xmlns:ns="http://org.apache.synapse/xsd"/>
      <arg evaluator="xml" expression="get-property('channel')" xmlns:ns="http://org.apache.synapse/xsd"/>
      <arg evaluator="xml" expression="get-property('referenceCode')" xmlns:ns="http://org.apache.synapse/xsd"/>
      <arg evaluator="xml"
        expression="get-property('generatedNotifyURL')" xmlns:ns="http://org.apache.synapse/xsd"/>
    </args>
  </payloadFactory>
</sequence>
